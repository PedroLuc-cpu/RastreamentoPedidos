// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RastreamentoPedidos.Data;

#nullable disable

namespace RastreamentoPedidos.Migrations
{
    [DbContext(typeof(RastreamentoPedidosContext))]
    [Migration("20250503121408_criacaoTabelaUsuario")]
    partial class criacaoTabelaUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RastreamentoPedidos.Model.Clientes.Cidade", b =>
                {
                    b.Property<long>("idCidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("idCidade");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("idCidade"));

                    b.Property<int>("idUF")
                        .HasColumnType("integer")
                        .HasColumnName("idUF");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("nome");

                    b.HasKey("idCidade");

                    b.HasIndex("idUF");

                    b.ToTable("cidade", (string)null);
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Clientes.Cliente", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idCliente");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("idCliente"));

                    b.Property<string>("documento")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long?>("id_encomenda")
                        .HasColumnType("bigint");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("idCliente");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Clientes.Endereco", b =>
                {
                    b.Property<long>("idEnderecoCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("idEnderecoCliente");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("idEnderecoCliente"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("bairro");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<long>("CidadeidCidade")
                        .HasColumnType("bigint");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EncomendaId")
                        .HasColumnType("integer");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("numero");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("idCliente")
                        .HasColumnType("integer");

                    b.Property<long>("idTpLogradouro")
                        .HasColumnType("bigint");

                    b.HasKey("idEnderecoCliente");

                    b.HasIndex("CidadeidCidade");

                    b.HasIndex("EncomendaId");

                    b.HasIndex("idCliente");

                    b.HasIndex("idTpLogradouro");

                    b.ToTable("endereco", (string)null);
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Clientes.Telefone", b =>
                {
                    b.Property<int>("idTelefoneCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idTelefoneCliente");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("idTelefoneCliente"));

                    b.Property<int>("idCliente")
                        .HasColumnType("integer");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("numero");

                    b.Property<bool>("padrao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("padrao");

                    b.Property<string>("prefixo")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("prefixo");

                    b.HasKey("idTelefoneCliente");

                    b.HasIndex("idCliente");

                    b.ToTable("telefone", (string)null);
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Clientes.TpLogradouro", b =>
                {
                    b.Property<long>("idTpLogradouro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("idTpLogradouro");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("idTpLogradouro"));

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("nome");

                    b.Property<string>("sigla")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("sigla");

                    b.HasKey("idTpLogradouro");

                    b.ToTable("tp_logradouro", (string)null);
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Clientes.UF", b =>
                {
                    b.Property<int>("idUF")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ifUF");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("idUF"));

                    b.Property<string>("sigla")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("sigla");

                    b.HasKey("idUF");

                    b.ToTable("uf", (string)null);
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Encomenda.Encomendas", b =>
                {
                    b.Property<int>("id_encomenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idEncomenda");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id_encomenda"));

                    b.Property<int>("clienteidCliente")
                        .HasColumnType("integer");

                    b.Property<DateTime>("data_encomenda")
                        .HasColumnType("timestamp")
                        .HasColumnName("data_pedido");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("descricao");

                    b.Property<int>("idCliente")
                        .HasColumnType("integer");

                    b.HasKey("id_encomenda");

                    b.HasIndex("clienteidCliente");

                    b.HasIndex("idCliente");

                    b.ToTable("encomendas", (string)null);
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.StatusEntrega", b =>
                {
                    b.Property<int>("codigo")
                        .HasColumnType("integer")
                        .HasColumnName("id_encomenda");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("codigo"));

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp")
                        .HasColumnName("data_atualizacao");

                    b.Property<string>("decricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("id_encomenda")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(225)
                        .HasColumnType("varchar")
                        .HasColumnName("status");

                    b.HasKey("codigo");

                    b.ToTable("status_entrega", null, t =>
                        {
                            t.Property("id_encomenda")
                                .HasColumnName("id_encomenda1");
                        });
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Usuario.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idUsuario");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("idUsuario"));

                    b.Property<bool>("ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("ativo")
                        .HasDefaultValueSql("true");

                    b.Property<string>("bio")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bio");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.HasKey("idUsuario");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Clientes.Cidade", b =>
                {
                    b.HasOne("RastreamentoPedidos.Model.Clientes.UF", "UF")
                        .WithMany()
                        .HasForeignKey("idUF")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UF");
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Clientes.Endereco", b =>
                {
                    b.HasOne("RastreamentoPedidos.Model.Clientes.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeidCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RastreamentoPedidos.Model.Encomenda.Encomendas", null)
                        .WithMany("localizacao")
                        .HasForeignKey("EncomendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RastreamentoPedidos.Model.Clientes.Cliente", null)
                        .WithMany("enderecos")
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RastreamentoPedidos.Model.Clientes.TpLogradouro", "TpLogradouro")
                        .WithMany()
                        .HasForeignKey("idTpLogradouro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("TpLogradouro");
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Clientes.Telefone", b =>
                {
                    b.HasOne("RastreamentoPedidos.Model.Clientes.Cliente", null)
                        .WithMany("telefones")
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Encomenda.Encomendas", b =>
                {
                    b.HasOne("RastreamentoPedidos.Model.Clientes.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteidCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RastreamentoPedidos.Model.Clientes.Cliente", null)
                        .WithMany("encomendas")
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.StatusEntrega", b =>
                {
                    b.HasOne("RastreamentoPedidos.Model.Encomenda.Encomendas", "encomenda")
                        .WithMany("statusEntregas")
                        .HasForeignKey("codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("encomenda");
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Clientes.Cliente", b =>
                {
                    b.Navigation("encomendas");

                    b.Navigation("enderecos");

                    b.Navigation("telefones");
                });

            modelBuilder.Entity("RastreamentoPedidos.Model.Encomenda.Encomendas", b =>
                {
                    b.Navigation("localizacao");

                    b.Navigation("statusEntregas");
                });
#pragma warning restore 612, 618
        }
    }
}
